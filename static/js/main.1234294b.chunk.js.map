{"version":3,"sources":["actions/actionTypes.js","actions/actionCreators.js","components/Spinner.js","components/ErrorMessage.js","components/ServiceAdd.js","components/ServiceListItem.js","components/Error.js","components/Loader.js","components/ServiceList.js","pages/ServicesPage.js","pages/ServiceDetailPage.js","App.js","reducers/ServiceAddReducer.js","reducers/ServiceListReducer.js","reducers/ServiceDetailReducer.js","store/index.js","index.js"],"names":["FETCH_SERVICES_REQUEST","FETCH_SERVICES_ERROR","FETCH_SERVICES_SUCCESS","ADD_SERVICE_REQUEST","ADD_SERVICE_ERROR","ADD_SERVICE_SUCCESS","REMOVE_SERVICE_REQUEST","REMOVE_SERVICE_ERROR","REMOVE_SERVICE_SUCCESS","CHANGE_SERVICE_FIELD","EDIT_CHANGE_SERVICE_FIELD","FETCH_EDIT_SERVICE_REQUEST","FETCH_EDIT_SERVICE_ERROR","FETCH_EDIT_SERVICE_SUCCESS","EDIT_SERVICES_REQUEST","EDIT_SERVICES_ERROR","EDIT_SERVICES_SUCCESS","fetchServicesSucces","items","type","payload","addServicesRequest","name","price","removeServicesRequest","id","fetchEditServiceSucces","item","fetchServices","dispatch","a","fetch","process","response","ok","Error","statusText","json","error","message","Spinner","className","ErrorMessage","ServiceAdd","useSelector","state","serviceAdd","loading","useDispatch","handleChange","event","target","value","changeServiceField","onSubmit","preventDefault","method","headers","body","JSON","stringify","required","onChange","disabled","ServiceListItem","props","onRemove","onEdit","deleteId","find","onClick","Loader","ServiceList","serviceList","loadingRemove","errorRemove","useState","currentId","setCurrentId","navigate","useNavigate","useEffect","handleRemove","removeServices","prevId","handleEdit","map","ServicesPage","ServiceDetailPage","serviceDetail","redirect","loadingEdit","useParams","fetchEditService","handleEditChange","editChangeServiceField","editServices","htmlFor","content","App","path","element","to","initialState","reducer","combineReducers","action","err","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.1234294b.chunk.js","sourcesContent":["// Запрос списка услуг\nexport const FETCH_SERVICES_REQUEST = 'FETCH_SERVICES_REQUEST';\nexport const FETCH_SERVICES_ERROR = 'FETCH_SERVICES_ERROR';\nexport const FETCH_SERVICES_SUCCESS = 'FETCH_SERVICES_SUCCESS';\n\n// Добавление услуг\nexport const ADD_SERVICE_REQUEST = 'ADD_SERVICE_REQUEST';\nexport const ADD_SERVICE_ERROR = 'ADD_SERVICE_ERROR';\nexport const ADD_SERVICE_SUCCESS = 'ADD_SERVICE_SUCCESS';\n\n// Удаление услуг\nexport const REMOVE_SERVICE_REQUEST = 'REMOVE_SERVICE_REQUEST';\nexport const REMOVE_SERVICE_ERROR = 'REMOVE_SERVICE_ERROR';\nexport const REMOVE_SERVICE_SUCCESS = 'REMOVE_SERVICE_SUCCESS';\n\n// Состояние инпутов\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const EDIT_CHANGE_SERVICE_FIELD = 'EDIT_CHANGE_SERVICE_FIELD';\n\n// Редактирование услуг (GET)\nexport const FETCH_EDIT_SERVICE_REQUEST = 'FETCH_EDIT_SERVICE_REQUEST';\nexport const FETCH_EDIT_SERVICE_ERROR = 'FETCH_EDIT_SERVICE_ERROR';\nexport const FETCH_EDIT_SERVICE_SUCCESS = 'FETCH_EDIT_SERVICE_SUCCESS';\n\n// Редактирование услуг (POST)\nexport const EDIT_SERVICES_REQUEST = 'EDIT_SERVICES_REQUEST';\nexport const EDIT_SERVICES_ERROR = 'EDIT_SERVICES_ERROR';\nexport const EDIT_SERVICES_SUCCESS = 'EDIT_SERVICES_SUCCESS';","import { \n  FETCH_SERVICES_REQUEST, \n  FETCH_SERVICES_ERROR, \n  FETCH_SERVICES_SUCCESS, \n  ADD_SERVICE_REQUEST, \n  ADD_SERVICE_ERROR, \n  ADD_SERVICE_SUCCESS, \n  CHANGE_SERVICE_FIELD,\n  REMOVE_SERVICE_REQUEST,\n  REMOVE_SERVICE_ERROR,\n  REMOVE_SERVICE_SUCCESS,\n  FETCH_EDIT_SERVICE_REQUEST,\n  FETCH_EDIT_SERVICE_ERROR,\n  FETCH_EDIT_SERVICE_SUCCESS,\n  EDIT_SERVICES_REQUEST,\n  EDIT_SERVICES_ERROR,\n  EDIT_SERVICES_SUCCESS,\n  EDIT_CHANGE_SERVICE_FIELD\n} from './actionTypes';\n\n\n// Запрос списка услуг\nexport function fetchServicesRequest() {\n  return {type: FETCH_SERVICES_REQUEST}\n}\n\nexport function fetchServicesError(error) {\n  return {type: FETCH_SERVICES_ERROR, payload: {error}}\n}\n\nexport function fetchServicesSucces(items) {\n  return {type: FETCH_SERVICES_SUCCESS, payload: {items}}\n}\n\n// Добавление услуг\nexport function addServicesRequest(name, price) {\n  return {type: ADD_SERVICE_REQUEST, payload: {name, price}}\n}\n\nexport function addServicesError(error) {\n  return {type: ADD_SERVICE_ERROR, payload: {error}}\n}\n\nexport function addServicesSucces() {\n  return {type: ADD_SERVICE_SUCCESS}\n}\n\n// Удаление услуг\nexport function removeServicesRequest(id) {\n  return {type: REMOVE_SERVICE_REQUEST, payload: {id}}\n}\n\nexport function removeServicesError(error) {\n  return {type: REMOVE_SERVICE_ERROR, payload: {error}}\n}\n\nexport function removeServicesSucces() {\n  return {type: REMOVE_SERVICE_SUCCESS}\n}\n\n// Состояние инпутов\nexport function changeServiceField(name, value) {\n  return {type: CHANGE_SERVICE_FIELD, payload: {name, value}}\n}\n\nexport function editChangeServiceField(name, value) {\n  return {type: EDIT_CHANGE_SERVICE_FIELD, payload: {name, value}}\n}\n\n// Редактирование услуг (GET)\nexport function fetchEditServiceRequest() {\n  return {type: FETCH_EDIT_SERVICE_REQUEST}\n}\n\nexport function fetchEditServiceError(error) {\n  return {type: FETCH_EDIT_SERVICE_ERROR, payload: {error}}\n}\n\nexport function fetchEditServiceSucces(item) {\n  return {type: FETCH_EDIT_SERVICE_SUCCESS, payload: {item}}\n}\n\n// Редактирование услуг (POST)\n\nexport function editServicesRequest() {\n  return {type: EDIT_SERVICES_REQUEST}\n}\n\nexport function editServicesError(error) {\n  return {type: EDIT_SERVICES_ERROR, payload: {error}}\n}\n\nexport function editServicesSucces() {\n  return {type: EDIT_SERVICES_SUCCESS}\n}\n\nexport const fetchServices = () => async (dispatch) => {\n  dispatch(fetchServicesRequest());\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_URL}/services`);\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    const items = await response.json();\n    dispatch(fetchServicesSucces(items));\n  } catch (error) {\n    dispatch(fetchServicesError(error.message));\n  }\n}\n\nexport const addServices = (name, price) => async (dispatch) => {\n  dispatch(addServicesRequest());\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_URL}/services`, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({name, price}),\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    dispatch(addServicesSucces());\n    dispatch(fetchServices());\n  } catch (error) {\n    dispatch(addServicesError(error.message));\n  }\n  \n}\n\nexport const removeServices = (id) => async (dispatch) => {\n  dispatch(removeServicesRequest());\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_URL}/services/${id}`, {\n      method: 'DELETE',\n      headers: {'Content-Type': 'application/json'},\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    dispatch(removeServicesSucces());\n    dispatch(fetchServices());\n  } catch (error) {\n    dispatch(removeServicesError(error.message));\n  } \n}\n\nexport const fetchEditService = (id) => async (dispatch) => {\n  dispatch(fetchEditServiceRequest());\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_URL}/services/${id}`);\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    const item = await response.json();\n    dispatch(fetchEditServiceSucces(item));\n  } catch (error) {\n    dispatch(fetchEditServiceError(error.message));\n  }\n}\n\nexport const editServices = (item) => async (dispatch) => {\n  dispatch(editServicesRequest());\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_URL}/services`, {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify(item),\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    dispatch(editServicesSucces());\n  } catch (e) {\n    dispatch(editServicesError(e))\n  }\n}","import React from 'react';\n\nexport default function Spinner() {\n  return (\n    <div className=\"loadingio-spinner-rolling-f5eee7vb83q\">\n      <div className=\"ldio-s8jtr5dcbdl\">\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function ErrorMessage() {\n  return (\n    <div className=\"Error-message\">\n      <p>Ошибка! Повторите запрос.</p>\n    </div>\n  )\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addServices, changeServiceField } from '../actions/actionCreators';\nimport Spinner from './Spinner';\nimport ErrorMessage from './ErrorMessage';\n\nexport default function ServiceAdd() {\n  const { item, loading, error } = useSelector(state => state.serviceAdd);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    dispatch(changeServiceField(name, value));\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(addServices(item.name, item.price));\n  }\n\n  return (\n    <form className=\"Service-add-form\" onSubmit={handleSubmit}>\n      <input \n        className=\"Service-add-input\" \n        name=\"name\" \n        type=\"text\" \n        required \n        value={item.name} \n        onChange={handleChange}\n      />\n      <input \n        className=\"Service-add-input\" \n        name=\"price\" \n        type=\"number\" \n        required \n        value={item.price} \n        onChange={handleChange}\n      />\n      <button \n        className=\"Service-add-btn\" \n        type=\"submit\" \n        disabled={loading}\n      >\n        {loading ? <Spinner /> : \"Добавить\"}\n      </button>\n      {error && <ErrorMessage />}\n    </form>\n  )\n}","import React from 'react';\nimport Spinner from './Spinner';\nimport ErrorMessage from './ErrorMessage';\n\nexport default function ServiceListItem(props) {\n  const { item, onRemove, onEdit, loading, id, error } = props;\n  const deleteId = id.find(id => id === item.id);\n\n  return (\n    <li className=\"Service-list-item\">\n      <p>{item.name}</p>\n      <p>{item.price}</p>\n      {error && <ErrorMessage />}\n      {\n        loading && item.id === deleteId \n        ? \n        <div className=\"Spinner\">\n          <Spinner />\n        </div> \n        :\n        <div className=\"Service-list-icons\">\n          <span className=\"material-icons edit\" onClick={() => onEdit(item.id)}>\n            border_color\n           </span>\n          <span className=\"material-icons delete\" onClick={() => onRemove(item.id)}>\n            delete\n          </span>\n        </div>\n      }\n    </li>\n  )\n}\n","import React from 'react';\n\nexport default function Error() {\n  return (\n    <div className=\"Error\">\n      <p>Произошла ошибка!</p>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function Loader() {\n  return (\n    <div className=\"loadingio-spinner-spinner-d0u91gzbbus\">\n      <div className=\"ldio-d6bfmbjuzf\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchServices, removeServices } from '../actions/actionCreators';\nimport ServiceListItem from './ServiceListItem';\nimport Error from '../components/Error';\nimport Loader from '../components/Loader';\n\nexport default function ServiceList() {\n  const { items, error, loading, loadingRemove, errorRemove } = useSelector(state => state.serviceList);\n  const dispatch = useDispatch();\n  const [currentId, setCurrentId] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchServices())\n  }, [dispatch])\n\n  const handleRemove = (id) => {\n    dispatch(removeServices(id))\n    setCurrentId(prevId => ([...prevId, id]));\n  }\n\n  const handleEdit = (id) => {\n    navigate(`/services/${id}`);\n  }\n  \n  return (\n    <>\n      {error && <Error />}\n      {loading && <Loader />}\n      {\n        <ul className=\"Service-list\">\n          {\n            items.map(item => \n              <ServiceListItem \n                key={item.id} \n                item={item}  \n                error={errorRemove} \n                loading={loadingRemove} \n                id={currentId}\n                onRemove={handleRemove}\n                onEdit={handleEdit}\n              />\n            )\n          }\n        </ul>\n      }\n    </>\n  )\n}\n","import React from 'react';\nimport ServiceAdd from '../components/ServiceAdd';\nimport ServiceList from '../components/ServiceList';\n\nexport default function ServicesPage() {\n  return (\n    <>\n      <ServiceAdd />\n      <ServiceList />\n    </>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchEditService, editChangeServiceField, editServices } from '../actions/actionCreators';\nimport Loader from '../components/Loader';\nimport Error from '../components/Error';\nimport Spinner from '../components/Spinner';\n\nexport default function ServiceDetailPage() {\n  const { item, loading, error, redirect, loadingEdit } = useSelector(state => state.serviceDetail);\n  const dispatch = useDispatch();\n  let { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchEditService(id));\n  }, [dispatch, id])\n\n  useEffect(() => {\n    if (redirect) {\n      navigate('/services');\n    }\n  }, [navigate, redirect])\n\n  const handleCancel = () => {\n    navigate(-1);\n  }\n\n  const handleEditChange = (event) => {\n    const { name, value } = event.target;\n    dispatch(editChangeServiceField(name, value));\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    dispatch(editServices(item));\n  }\n\n  if (error) {\n    return <Error />;\n  }\n  \n  return (\n    <>\n      {\n        loading \n        ? \n        <Loader /> \n        :\n        <form className=\"Service-detail\" onSubmit={handleSubmit}>\n          <label htmlFor=\"name\">Название</label>\n          <input \n            className=\"Service-detail-field\" \n            type=\"text\" \n            name=\"name\" \n            id=\"name\" \n            disabled={loadingEdit}\n            value={item.name} \n            onChange={handleEditChange}\n          />\n          <label htmlFor=\"price\">Стоимость</label>\n          <input \n            className=\"Service-detail-field\" \n            type=\"number\" \n            name=\"price\" \n            id=\"price\" \n            disabled={loadingEdit}\n            value={item.price} \n            onChange={handleEditChange}/>\n          <label htmlFor=\"content\">Описание</label>\n          <input \n            className=\"Service-detail-field\" \n            type=\"text\" \n            name=\"content\" \n            id=\"content\" \n            disabled={loadingEdit}\n            value={item.content} \n            onChange={handleEditChange}\n          />\n          <div>\n            <button \n              className=\"Service-detail-btn\" \n              type=\"button\"\n              disabled={loadingEdit}\n              onClick={handleCancel}\n            >\n              Отмена\n            </button>\n            <button className=\"Service-detail-btn\" type=\"submit\">\n              {loadingEdit ? <Spinner /> : 'Сохранить'}\n            </button>\n          </div>\n        </form>\n      }\n    </>\n  )\n}\n","import './App.css';\nimport React from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport ServicesPage from './pages/ServicesPage';\nimport ServiceDetailPage from './pages/ServiceDetailPage';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"services\" element={<ServicesPage />} />\n        <Route path=\"services/:id\" element={<ServiceDetailPage />} />\n        <Route path=\"*\" element={<Navigate to=\"/services\" />} />\n      </Routes>\n    </div>\n  );\n}\n","import { \n  ADD_SERVICE_REQUEST, \n  ADD_SERVICE_ERROR, \n  ADD_SERVICE_SUCCESS, \n  CHANGE_SERVICE_FIELD \n} from '../actions/actionTypes';\n\nconst initialState = {\n  item: {name: '', price: '', content: ''},\n  error: null,\n  loading: false\n}\n\nexport default function serviceAddReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_SERVICE_REQUEST:\n      return {\n        ...state, \n        error: null, \n        loading: true\n      };\n    case ADD_SERVICE_ERROR:\n      const { error } = action.payload;\n      return {\n        ...initialState, \n        error\n      };\n    case ADD_SERVICE_SUCCESS:\n      return {\n        ...initialState\n      };\n    case CHANGE_SERVICE_FIELD:\n      const { name, value } = action.payload;\n      return {\n        ...state, \n        item: {...state.item, [name]: value}\n      };\n    default:\n      return state;\n  }\n}","import { \n  FETCH_SERVICES_REQUEST, \n  FETCH_SERVICES_ERROR, \n  FETCH_SERVICES_SUCCESS,\n  REMOVE_SERVICE_REQUEST,\n  REMOVE_SERVICE_ERROR,\n  REMOVE_SERVICE_SUCCESS\n} from '../actions/actionTypes';\n\nconst initialState = {\n  items: [],\n  error: null,\n  loading: false,\n  loadingRemove: false,\n  errorRemove: null\n};\n\nexport default function serviceListReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_SERVICES_REQUEST:\n      return {\n        ...initialState,\n        loading: true\n      }\n    case FETCH_SERVICES_ERROR:\n      const { error } = action.payload;\n      return {\n        ...initialState, \n        error\n      }\n    case FETCH_SERVICES_SUCCESS:\n      const { items } = action.payload;\n      return {\n        ...initialState,\n        items\n      }\n    case REMOVE_SERVICE_REQUEST:\n      return {\n        ...state, \n        loadingRemove: true,\n        errorRemove: null\n      }\n    case REMOVE_SERVICE_ERROR:\n      const { error: errorRemove } = action.payload;\n      return {\n        ...state, \n        errorRemove, \n        loadingRemove: false\n      }\n    case REMOVE_SERVICE_SUCCESS:\n      return {\n        ...state, \n        errorRemove: null, \n        loadingRemove: false\n      }\n    default:\n      return state;\n  }\n}","import {\n  FETCH_EDIT_SERVICE_REQUEST,\n  FETCH_EDIT_SERVICE_ERROR,\n  FETCH_EDIT_SERVICE_SUCCESS,\n  EDIT_CHANGE_SERVICE_FIELD,\n  EDIT_SERVICES_REQUEST,\n  EDIT_SERVICES_ERROR,\n  EDIT_SERVICES_SUCCESS\n} from '../actions/actionTypes';\n\nconst initialState = {\n  item: {\n    id: '',\n    name: '',\n    price: '',\n    content: ''\n  },\n  loading: false,\n  error: null,\n  redirect: false,\n  loadingEdit: false\n}\n\nexport default function serviceDetailReducer(state = initialState, action) {\n  switch(action.type) {\n    case FETCH_EDIT_SERVICE_REQUEST:\n      return {\n        ...initialState, \n        loading: true\n      };\n    case FETCH_EDIT_SERVICE_ERROR:\n      const { error } = action.payload;\n      return {\n        ...initialState, \n        error\n      };\n    case FETCH_EDIT_SERVICE_SUCCESS:\n      const { item } = action.payload;\n      return {\n        ...initialState, \n        item\n      };\n    case EDIT_CHANGE_SERVICE_FIELD:\n      const { name, value } = action.payload;\n      return {\n        ...state, \n        item: {...state.item, [name]: value}\n      };\n    case EDIT_SERVICES_REQUEST:\n      return {\n        ...state, \n        error: null, \n        loadingEdit: true, \n        redirect: false\n      };\n    case EDIT_SERVICES_ERROR:\n      const { error: err } = action.payload;\n      return {\n        ...state, \n        error: err, \n        loadingEdit: false, \n        redirect: false\n      };\n    case EDIT_SERVICES_SUCCESS:\n      return {\n        ...initialState, \n        redirect: true\n      };\n    default:\n      return state;\n  }\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk';\nimport serviceAddReducer from \"../reducers/ServiceAddReducer\";\nimport serviceListReducer from '../reducers/ServiceListReducer';\nimport serviceDetailReducer from '../reducers/ServiceDetailReducer';\n\nconst reducer = combineReducers({\n  serviceAdd: serviceAddReducer,\n  serviceList: serviceListReducer,\n  serviceDetail: serviceDetailReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer, \n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/services-list\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}